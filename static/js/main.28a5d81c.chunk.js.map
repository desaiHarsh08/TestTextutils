{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","backgroundColor","value","rows","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.28a5d81c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-danger\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// functionName.propTypes = {\r\n\r\n// }\r\n\r\nNavbar.propTypes = {\r\n  // title: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\n// Default props: -\r\nNavbar.defaultProps = {\r\n  title: \"setTitle\",\r\n  aboutText: \"setAboutText\",\r\n};\r\n\r\n// props - passing values\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n    // Convert to uppercase\r\n    const handleUpClick = () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n\r\n    // Convert to Lowercase\r\n    const handleLowClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n\r\n    // Clear textarea\r\n    const handleClearClick = () =>{\r\n        setText(\"\");\r\n        props.showAlert(\"Cleared textbox\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n        \r\n    }\r\n\r\n    // Copy Text\r\n    const handleCopy = (event) =>{\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\", \"success\");\r\n    }\r\n\r\n    // Remove Extra space\r\n    const handleRemoveSpace = (event) =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra space has been removed\", \"success\");\r\n    }\r\n    \r\n    const [text, setText] = useState('Enter text here');\r\n    // text = \"new text\"; // wrong way to change the state\r\n    // setText(\"asdda\"); // Correct way to change the state\r\n  return (\r\n    <>\r\n    \r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} value={text} id=\"myBox\" rows=\"8\" onChange={handleOnChange}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-warning mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-success mx-2\" onClick={handleClearClick}>Clear</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-info mx-2\" onClick={handleRemoveSpace}>Remove extra space</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{text.split(\" \").length * 0.008} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it.\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show role=\"alert`}>\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\nimport React, {useState} from 'react';\n// import React from \"react\";\n// import {\n//   BrowserRouter,\n//   // Switch,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  }\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500);\n  };\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils2\" aboutText=\"AboutTextUtils\" /> */}\n      {/* <Navbar  /> */}\n\n    {/* <BrowserRouter> */}\n      <Navbar title=\"TextUtils2\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/>\n        {/* \n          /users --> Component 1\n          /users/home --> Component 2\n         */}\n      {/* <Routes>\n          <Route exact path=\"/about\" element={<About />}>\n          </Route>\n          \n          <Route exact path=\"/\" element={<TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/>}>\n          \n          </Route>\n        </Routes> */}\n      </div>\n        {/* </BrowserRouter> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}